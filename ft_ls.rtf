{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;\f2\froman\fcharset0 Times-Roman;
\f3\fswiss\fcharset0 ArialMT;\f4\fnil\fcharset0 Menlo-Regular;\f5\fnil\fcharset0 Menlo-Italic;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red14\green14\blue14;\red255\green255\blue255;
\red235\green236\blue237;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c6667\c6667\c6667;\cssrgb\c100000\c100000\c100000;
\cssrgb\c93725\c94118\c94510;}
\paperw12240\paperh15840\margl1440\margr1440\vieww19440\viewh20480\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc\partightenfactor0

\f0\b\fs24 \cf0 \ul \ulc0 ft_ls\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b0 \cf0 \ulnone Consignes \'e0 remplir :\
\
- commande de base : ls -1\
Testfile\
Testdir\
etc.\
\
- ls -l (long listing format)\
Formatage exactement pareil, cela va jusqu\'92\'e0 l\'92alignement \'e0 droite de la taille des fichiers\
\
- ls -t (sort by modification time, newest first)\
\
- ls -r (same but oldest first)\
\
- ls -R (list subdirectory recursively)\
Attention difficile \'e0 appliquer et doit prendre en compte message quand pas les droit d\'92acc\'e8s,\
Example dans la video avec :\
./norights:\
ls : no rights : Permission denied\
\
- ls -a (all)\
Show content starting with \'91.\'92\
\
Pour ls -l, les files mode \'e0 afficher sont ceux ci :\
\
The file mode printed under the -l option consists of the entry type, owner permissions, and group permissions.  The entry type character describes the type\
     of file, as follows:\
\
           b     Block special file.\
           c     Character special file.\
           d     Directory.\
           l     Symbolic link.\
           s     Socket link.\
           p     FIFO.\
           -     Regular file.\
\
ATTENTION, point \'e0 ne pas manquer, la gestion d\'92erreur !\
-> comportment anormal comme segfault, bus error etc.\
-> gestion d\'92erreur par l\'92utilisateur (par example no rights ou fichier qui n\'92existe pas)\
-> test de ls dans /dev (pas de taille mais des 4, 127 ou 2, 1 etc., cc majeure et mineure des devices) -> a chercher.\
+ types de fichiers \'91b\'92 (block special) et \'91c\'92 (caract\'e8re sp\'e9cial) qui n\'92existent que dans /dev\
\
- test \'e0 faire pour tester la robustesse de ls -R, dans /usr \'85\
-> ne doit pas faire de fuite m\'e9moire ou de segfault etc.\
\
Bonus couleur -G (couleur pour r\'e9pertoire, fichier etc.)\
\
Fonctions \'e0 investiguer :\
\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
\uc0\u9702 
\f2  opendir / readdir / closedir 
\f1 \uc0\u9702 
\f2  stat / lstat 
\f1 \uc0\u9702 
\f2  getpwuid / getgrgid 
\f1 \uc0\u9702 
\f2  time / ctime 
\f1 \uc0\u9702 
\f2  readlink 
\f1 \uc0\u9702 
\f2  perror / strerror\
\
\
\
ERROR to check :\
\

\b \ul 1/ ft_ls \'97 \'97
\b0 \ulnone \
\

\b \ul 2 / doesn\'92t show with arrow -> the linked file + decalage entre min et max date
\b0 \ulnone \
\
\

\b \ul 3/ Doesn\'92t show correct min and max devices size
\b0 \ulnone \
\
in /dev -> 
\f3\b\fs30 \cf3 \cb4 \outl0\strokewidth0 \strokec3 TL;DR
\b0 \'a0\
\pard\pardeftab720\sl340\partightenfactor0
\cf3 Depending on the filetype, the output string for long option\'a0
\f4\fs26 \cb5 -l
\f3\fs30 \cb4 \'a0will be build up differently.\
Notice that if filetype is\'a0
\f4\fs26 \cb5 S_ISCHR
\f3\fs30 \cb4 \'a0(character device, continuous stream of data) or\'a0
\f4\fs26 \cb5 S_ISBLK
\f3\fs30 \cb4 \'a0(block device, random access) the major and minor device numbers are printed to character array\'a0
\f4\fs26 \cb5 p
\f3\fs30 \cb4 (which is essentially a string).\'a0
\i That is the only data that is appended to the output string\'a0
\f5\fs26 \cb5 p
\f3\i0\fs30 \cb4 \'a0. However, when we get to\'a0
\f4\fs26 \cb5 else
\f3\fs30 \cb4 \'a0part ,\'a0
\f4\fs26 \cb5 ls
\f3\fs30 \cb4 \'a0understands that we're working with files\'a0
\i other than block or character devices
\i0 .\
\
\pard\pardeftab720\sl340\sa300\partightenfactor0

\b \cf3 What are device files anyway?
\b0 \
Essentially they are references. They are way for applications to deal with actual physical devices and their drivers. For example ,\'a0
\f4\fs26 \cb5 /dev/sda
\f3\fs30 \cb4 \'a0and\'a0
\f4\fs26 \cb5 /dev/sr0
\f3\fs30 \cb4 \'a0(which is CD/DVD drive). Some of the devices are just abstraction. For example,\'a0
\f4\fs26 \cb5 /dev/zero
\f3\fs30 \cb4 ,\'a0
\f4\fs26 \cb5 /dev/null
\f3\fs30 \cb4 , and\'a0
\f4\fs26 \cb5 /dev/random
\f3\fs30 \cb4 \'a0aren't physical devices. They are ways of interfacing with kernel processes.\
\pard\pardeftab720\sl340\sa300\partightenfactor0

\i \cf3 Since they are references, it makes sense that they wouldn't have filesize
\i0 . It's possible to know the size of those files that they take up in the\'a0
\f4\fs26 \cb5 /dev
\f3\fs30 \cb4 \'a0directory, but they don't correspond to the actual devices they represent !\
\
cc : https://askubuntu.com/questions/727728/size-of-device-file-missing-in-ls-l-output\
\
\
:-7?\{QxTzxJh9KD-3d\
PIN 2324\
}